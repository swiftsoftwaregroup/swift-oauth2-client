{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Swift OAuth2 Client","text":"<p>Swift OAuth2 Client is a Python SDK that simplifies interaction with OAuth2-protected APIs. This documentation will guide you through the installation, usage, and API reference of the SDK.</p>"},{"location":"#installation","title":"Installation","text":"<p>You can install Swift OAuth2 Client using pip:</p> <pre><code>pip install swift-oauth2-client\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<p>Here's a quick example of how to use Swift OAuth2 Client:</p> <pre><code>from oauth2_client import OAuth2Config, new_api_client\n\nconfig = OAuth2Config(\n    token_url=\"https://api.example.com/oauth/token\",\n    client_id=\"your_client_id\",\n    client_secret=\"your_client_secret\",\n    scopes=[\"read\", \"write\"]\n)\n\nwith new_api_client(config, \"https://api.example.com\") as client:\n    response, status = client.call_api(\"GET\", \"/users\")\n    print(f\"Status: {status}, Response: {response}\")\n</code></pre> <p>Asynchronous usage:</p> <pre><code>import asyncio\nfrom oauth2_client import OAuth2Config, new_api_client_async\n\nasync def main():\n    config = OAuth2Config(\n        token_url=\"https://api.example.com/oauth/token\",\n        client_id=\"your_client_id\",\n        client_secret=\"your_client_secret\",\n        scopes=[\"read\", \"write\"]\n    )\n\n    async with new_api_client_async(config, \"https://api.example.com\") as client:\n        response, status = await client.call_api(\"GET\", \"/users\")\n        print(f\"Status: {status}, Response: {response}\")\n\nasyncio.run(main())\n</code></pre> <p>For more detailed information, check out the API Reference.</p>"},{"location":"api_reference/","title":"API Reference","text":"<p>This page contains the complete API reference for the Swift OAuth2 Client.</p>"},{"location":"api_reference/#oauth2_client.config.OAuth2Config","title":"<code>oauth2_client.config.OAuth2Config</code>  <code>dataclass</code>","text":"<p>Configuration class for OAuth2 authentication.</p> <p>This class holds the necessary information for OAuth2 authentication, including the token URL, client credentials, and requested scopes.</p> <p>Attributes:</p> Name Type Description <code>token_url</code> <code>str</code> <p>The URL to obtain the OAuth2 token.</p> <code>client_id</code> <code>str</code> <p>The client ID for OAuth2 authentication.</p> <code>client_secret</code> <code>str</code> <p>The client secret for OAuth2 authentication.</p> <code>scopes</code> <code>List[str]</code> <p>A list of scopes to request for the OAuth2 token.</p> Example <pre><code>config = OAuth2Config(\n    token_url=\"https://api.example.com/oauth/token\",\n    client_id=\"your_client_id\",\n    client_secret=\"your_client_secret\",\n    scopes=[\"read\", \"write\"]\n)\n</code></pre>"},{"location":"api_reference/#oauth2_client.api_client.APIClient","title":"<code>oauth2_client.api_client.APIClient</code>","text":"<p>Client for making authenticated API calls using OAuth2.</p> <p>This class provides a synchronous interface for API calls, internally using an asynchronous client.</p> <p>Attributes:</p> Name Type Description <code>token_manager</code> <code>TokenManager</code> <p>Manages OAuth2 tokens synchronously.</p> <code>async_client</code> <code>APIClientAsync</code> <p>The underlying asynchronous client.</p>"},{"location":"api_reference/#oauth2_client.api_client.APIClient.__enter__","title":"<code>__enter__()</code>","text":"<p>Enter the runtime context related to this object.</p> <p>Returns:</p> Name Type Description <code>APIClient</code> <p>The client instance.</p> Example <pre><code>with APIClient(config, \"https://api.example.com\") as client:\n    response, status = client.call_api(\"GET\", \"/users\")\n</code></pre>"},{"location":"api_reference/#oauth2_client.api_client.APIClient.__exit__","title":"<code>__exit__(exc_type, exc_val, exc_tb)</code>","text":"<p>Exit the runtime context related to this object.</p> <p>This method calls <code>close()</code> to ensure all resources are properly released.</p>"},{"location":"api_reference/#oauth2_client.api_client.APIClient.__init__","title":"<code>__init__(config, base_url)</code>","text":"<p>Initialize the APIClient.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>Optional[OAuth2Config]</code> <p>OAuth2 configuration. If None, no authentication is used.</p> required <code>base_url</code> <code>str</code> <p>The base URL for API calls.</p> required"},{"location":"api_reference/#oauth2_client.api_client.APIClient.call_api","title":"<code>call_api(method, path, body=None, additional_headers=None)</code>","text":"<p>Make an API call.</p> <p>Parameters:</p> Name Type Description Default <code>method</code> <code>str</code> <p>HTTP method (e.g., \"GET\", \"POST\").</p> required <code>path</code> <code>str</code> <p>API endpoint path.</p> required <code>body</code> <code>Any</code> <p>Request body. Defaults to None.</p> <code>None</code> <code>additional_headers</code> <code>Optional[Dict[str, str]]</code> <p>Additional HTTP headers. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Tuple[Union[bytes, str, Dict], int]</code> <p>Tuple[Union[bytes, str, Dict], int]: Response body and status code.</p> Example <pre><code>response, status_code = client.call_api(\"GET\", \"/users\")\nprint(f\"Status: {status_code}, Response: {response}\")\n</code></pre>"},{"location":"api_reference/#oauth2_client.api_client.APIClient.close","title":"<code>close()</code>","text":"<p>Close the client and its underlying resources.</p> <p>This method should be called when the client is no longer needed.</p>"},{"location":"api_reference/#oauth2_client.api_client.APIClient.download_file","title":"<code>download_file(method, path, body=None, additional_headers=None, dest_path=None)</code>","text":"<p>Download a file from the API.</p> <p>Parameters:</p> Name Type Description Default <code>method</code> <code>str</code> <p>HTTP method (usually \"GET\").</p> required <code>path</code> <code>str</code> <p>API endpoint path.</p> required <code>body</code> <code>Any</code> <p>Request body. Defaults to None.</p> <code>None</code> <code>additional_headers</code> <code>Optional[Dict[str, str]]</code> <p>Additional HTTP headers. Defaults to None.</p> <code>None</code> <code>dest_path</code> <code>Optional[Union[str, Path]]</code> <p>Destination path to save the file. If None, returns the file content.</p> <code>None</code> <p>Returns:</p> Type Description <code>Union[str, bytes]</code> <p>Union[str, bytes]: File content or success message.</p> Example <pre><code>result = client.download_file(\"GET\", \"/files/document.pdf\", dest_path=\"local_document.pdf\")\nprint(result)\n</code></pre>"},{"location":"api_reference/#oauth2_client.token_manager.TokenManager","title":"<code>oauth2_client.token_manager.TokenManager</code>","text":"<p>A synchronous wrapper for the asynchronous TokenManagerAsync class.</p> <p>This class provides a blocking, synchronous interface for acquiring and refreshing OAuth2 tokens, using an asyncio event loop to run the asynchronous methods of TokenManagerAsync.</p> <p>Attributes:</p> Name Type Description <code>_async_token_manager</code> <code>TokenManagerAsync</code> <p>An instance of the TokenManagerAsync class.</p> <code>_loop</code> <code>AbstractEventLoop</code> <p>The asyncio event loop to run async methods.</p> Example usage <pre><code>import asyncio\nfrom token_manager import TokenManager\nfrom token_manager_async import TokenManagerAsync\nfrom config import OAuth2Config\n\n# Step 1: Initialize the OAuth2 configuration\nconfig = OAuth2Config(\n    client_id=\"your_client_id\",\n    client_secret=\"your_client_secret\",\n    token_url=\"https://oauth2-server.com/token\",\n    scopes=[\"scope1\", \"scope2\"]\n)\n\n# Step 2: Create an instance of TokenManagerAsync with the configuration\nasync_token_manager = TokenManagerAsync(config)\n\n# Step 3: Get an asyncio event loop (or create a new one)\nloop = asyncio.get_event_loop()\n\n# Step 4: Initialize the TokenManager with the async token manager and the event loop\ntoken_manager = TokenManager(async_token_manager=async_token_manager, loop=loop)\n\n# Step 5: Use the TokenManager to get a valid token synchronously\ntoken = token_manager.get_valid_token()\n\n# Output the token\nprint(f\"Access Token: {token}\")\n</code></pre>"},{"location":"api_reference/#oauth2_client.token_manager.TokenManager.access_token","title":"<code>access_token: str</code>  <code>property</code> <code>writable</code>","text":"<p>Accesses the current OAuth2 access token.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The current OAuth2 access token.</p>"},{"location":"api_reference/#oauth2_client.token_manager.TokenManager.expires_at","title":"<code>expires_at: float</code>  <code>property</code> <code>writable</code>","text":"<p>Accesses the expiration time of the current OAuth2 access token.</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>The expiration time of the token in UNIX time.</p>"},{"location":"api_reference/#oauth2_client.token_manager.TokenManager.__init__","title":"<code>__init__(async_token_manager, loop)</code>","text":"<p>Initializes the TokenManager with an async token manager and event loop.</p> <p>Parameters:</p> Name Type Description Default <code>async_token_manager</code> <code>TokenManagerAsync</code> <p>The asynchronous token manager responsible for managing tokens.</p> required <code>loop</code> <code>AbstractEventLoop</code> <p>The asyncio event loop used to run async tasks.</p> required"},{"location":"api_reference/#oauth2_client.token_manager.TokenManager.get_valid_token","title":"<code>get_valid_token()</code>","text":"<p>Retrieves a valid OAuth2 token synchronously, refreshing it if necessary.</p> <p>This method wraps the async get_valid_token method from TokenManagerAsync and runs it in the provided event loop.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A valid OAuth2 access token.</p>"},{"location":"api_reference/#oauth2_client.token_manager.TokenManager.refresh_token","title":"<code>refresh_token()</code>","text":"<p>Refreshes the OAuth2 access token synchronously.</p> <p>This method wraps the async refresh_token method from TokenManagerAsync and runs it in the provided event loop.</p> <p>Returns:</p> Type Description <p>None</p>"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync","title":"<code>oauth2_client.api_client_async.APIClientAsync</code>","text":"<p>Asynchronous client for making authenticated API calls using OAuth2.</p> <p>This class handles API calls, including automatic token management and request/response processing.</p> <p>Attributes:</p> Name Type Description <code>base_url</code> <code>str</code> <p>The base URL for API calls.</p> <code>token_manager</code> <code>TokenManager</code> <p>Manages OAuth2 tokens.</p> <code>http_client</code> <code>AsyncClient</code> <p>Asynchronous HTTP client.</p> Example <pre><code>config = OAuth2Config(...)\nasync with APIClientAsync(config, \"https://api.example.com\") as client:\n    response, status = await client.call_api(\"GET\", \"/users\")\n</code></pre>"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync.__aenter__","title":"<code>__aenter__()</code>  <code>async</code>","text":"<p>Async context manager entry.</p>"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync.__aexit__","title":"<code>__aexit__(exc_type, exc_val, exc_tb)</code>  <code>async</code>","text":"<p>Async context manager exit.</p>"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync.__init__","title":"<code>__init__(config, base_url)</code>","text":"<p>Initialize the APIClientAsync.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>Optional[OAuth2Config]</code> <p>OAuth2 configuration. If None, no authentication is used.</p> required <code>base_url</code> <code>str</code> <p>The base URL for API calls.</p> required"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync.call_api","title":"<code>call_api(method, path, body=None, additional_headers=None)</code>  <code>async</code>","text":"<p>Make an authenticated API call.</p> <p>Parameters:</p> Name Type Description Default <code>method</code> <code>str</code> <p>HTTP method (e.g., \"GET\", \"POST\").</p> required <code>path</code> <code>str</code> <p>API endpoint path.</p> required <code>body</code> <code>Any</code> <p>Request body. Defaults to None.</p> <code>None</code> <code>additional_headers</code> <code>Optional[Dict[str, str]]</code> <p>Additional HTTP headers. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Tuple[Union[bytes, str, Dict], int]</code> <p>Tuple[Union[bytes, str, Dict], int]: Response body and status code.</p> <p>Raises:</p> Type Description <code>APIError</code> <p>If the API call fails.</p> Example <pre><code>response, status = await client.call_api(\"GET\", \"/users\")\nprint(f\"Status: {status}, Response: {response}\")\n</code></pre>"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Close the HTTP client session.</p>"},{"location":"api_reference/#oauth2_client.api_client_async.APIClientAsync.download_file","title":"<code>download_file(method, path, body=None, additional_headers=None, dest_path=None)</code>  <code>async</code>","text":"<p>Download a file from the API.</p> <p>Parameters:</p> Name Type Description Default <code>method</code> <code>str</code> <p>HTTP method (usually \"GET\").</p> required <code>path</code> <code>str</code> <p>API endpoint path.</p> required <code>body</code> <code>Any</code> <p>Request body. Defaults to None.</p> <code>None</code> <code>additional_headers</code> <code>Optional[Dict[str, str]]</code> <p>Additional HTTP headers. Defaults to None.</p> <code>None</code> <code>dest_path</code> <code>Optional[Union[str, Path]]</code> <p>Destination path to save the file. If None, returns the file content.</p> <code>None</code> <p>Returns:</p> Type Description <code>Union[str, bytes]</code> <p>Union[str, bytes]: File content or success message.</p> Example <pre><code>result = await client.download_file(\"GET\", \"/files/document.pdf\", dest_path=\"local_document.pdf\")\nprint(result)\n</code></pre>"},{"location":"api_reference/#oauth2_client.token_manager_async.TokenManagerAsync","title":"<code>oauth2_client.token_manager_async.TokenManagerAsync</code>","text":"<p>Manages OAuth2 token acquisition and renewal.</p> <p>This class is responsible for obtaining and refreshing OAuth2 tokens as needed for API authentication.</p> <p>Attributes:</p> Name Type Description <code>config</code> <code>OAuth2Config</code> <p>The OAuth2 configuration.</p> <code>access_token</code> <code>str</code> <p>The current access token.</p> <code>expires_at</code> <code>float</code> <p>The expiration time of the current token.</p> <code>lock</code> <code>Lock</code> <p>A lock for thread-safe token refresh operations.</p> Example <pre><code>config = OAuth2Config(...)\ntoken_manager = TokenManagerAsync(config)\ntoken = await token_manager.get_valid_token()\n</code></pre>"},{"location":"api_reference/#oauth2_client.token_manager_async.TokenManagerAsync.__init__","title":"<code>__init__(config)</code>","text":"<p>Initialize the TokenManagerAsync.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>OAuth2Config</code> <p>The OAuth2 configuration.</p> required"},{"location":"api_reference/#oauth2_client.token_manager_async.TokenManagerAsync.get_valid_token","title":"<code>get_valid_token()</code>  <code>async</code>","text":"<p>Get a valid OAuth2 token, refreshing if necessary.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A valid OAuth2 access token.</p> <p>Raises:</p> Type Description <code>TokenRefreshError</code> <p>If token refresh fails.</p>"},{"location":"api_reference/#oauth2_client.token_manager_async.TokenManagerAsync.refresh_token","title":"<code>refresh_token()</code>  <code>async</code>","text":"<p>Refresh the OAuth2 token.</p> <p>This method obtains a new access token from the OAuth2 server.</p> <p>Raises:</p> Type Description <code>TokenRefreshError</code> <p>If token refresh fails.</p>"},{"location":"api_reference/#oauth2_client.exceptions","title":"<code>oauth2_client.exceptions</code>","text":"<p>This module contains custom exceptions for the OAuth2Client.</p>"},{"location":"api_reference/#oauth2_client.exceptions.APIError","title":"<code>APIError</code>","text":"<p>               Bases: <code>OAuth2ClientError</code></p> <p>Raised when an API call fails.</p>"},{"location":"api_reference/#oauth2_client.exceptions.OAuth2ClientError","title":"<code>OAuth2ClientError</code>","text":"<p>               Bases: <code>Exception</code></p> <p>Base exception for OAuth2Client.</p>"},{"location":"api_reference/#oauth2_client.exceptions.TokenRefreshError","title":"<code>TokenRefreshError</code>","text":"<p>               Bases: <code>OAuth2ClientError</code></p> <p>Raised when token refresh fails.</p>"},{"location":"api_reference/#helper-functions","title":"Helper Functions","text":""},{"location":"api_reference/#oauth2_client.api_client.new_api_client","title":"<code>oauth2_client.api_client.new_api_client(config, base_url)</code>","text":"<p>Create a new APIClient instance.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>Optional[OAuth2Config]</code> <p>OAuth2 configuration. If None, no authentication is used.</p> required <code>base_url</code> <code>str</code> <p>The base URL for API calls.</p> required <p>Returns:</p> Name Type Description <code>APIClient</code> <code>APIClient</code> <p>A new APIClient instance.</p> Example <pre><code>config = OAuth2Config(...)\nclient = new_api_client(config, \"https://api.example.com\")\n</code></pre>"},{"location":"api_reference/#oauth2_client.api_client_async.new_api_client_async","title":"<code>oauth2_client.api_client_async.new_api_client_async(config, base_url)</code>","text":"<p>Create a new APIClientAsync instance.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>Optional[OAuth2Config]</code> <p>OAuth2 configuration. If None, no authentication is used.</p> required <code>base_url</code> <code>str</code> <p>The base URL for API calls.</p> required <p>Returns:</p> Name Type Description <code>APIClientAsync</code> <code>APIClientAsync</code> <p>A new APIClientAsync instance.</p> Example <pre><code>config = OAuth2Config(...)\nclient = new_api_client_async(config, \"https://api.example.com\")\nasync with client:\n    # Use the client\n</code></pre>"}]}